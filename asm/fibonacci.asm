# 计算斐波那契数列的前7个数字 (1, 1, 2, 3, 5, 8, 13)
# 使用寄存器：
# x1: 当前数
# x2: 下一个数
# x3: 临时存储用于计算
# x4: 计数器
# x5: 存储目标数列长度 (7)

addi x1, x0, 1    # 初始化第一个斐波那契数 f(1) = 1
addi x2, x0, 1    # 初始化第二个斐波那契数 f(2) = 1
addi x4, x0, 2    # 计数器从2开始（已经计算了两个数）
addi x5, x0, 7    # 目标是计算7个斐波那契数

add x3, x1, x2    # x3 = x1 + x2 (计算下一个斐波那契数)
add x1, x0, x2    # x1 = x2 (更新当前数)
add x2, x0, x3    # x2 = x3 (更新下一个数)
addi x4, x4, 1    # 计数器+1
bne x4, x5, -16   # 如果计数器 != 7，返回到第一条add指令
halt              # 程序结束

# 当循环结束时，x2中存储的是第7个斐波那契数 (13) 